Version 2.0.0:


Version 1.6.0:
 - Refactor helpmenu: Make specific vegas options double-dash
 - Refactor: rename OptionFlags internal variables, vegas specific names
 - Refactor: Move Integrator pointer creation to HelpersIntegrate.
 - Refactor: Add shared pointers to vegas and integrator.
 - Refactor: Replace "1.*/" --> "/", fix typo in helpmenu.
 - Refactor: Add virtual Integrator::WriteResults.
 - Refactor: Reorganize displayresults, outFile->ofil,...
 - Refactor: Make VegasIntegrator a derived class, use crtflnms
 - Fixbug: remove a warning in commonhelpers
 - Refactor dtkintegrate: clean up code and match dtk code-style.
 - Improve dtknci info and dtkcube log
 - Merged in dtkintegrate (pull request #20)
 - Now the user can define arbitrary integration boundaries for any function.
 - Merged jmsolano/denstoolkitdevbb/dtkintegrate into dtkintegrate
 - Merged in dtkintegrate (pull request #19)
 - Correction made: Integration region bounds in position space.
 - Merged jmsolano/denstoolkitdevbb/dtkintegrate into dtkintegrate
 - Merge branch 'develop' into dtkintegrate
 - Bugfix: aligning of molecules works if molecule is already algined.
 - Merged in dtkintegrate (pull request #18)
 - Round function belonging to cmath std library has been implemented to round the number of electrons. Apostrophes in the help menu were removed.
 - As not all the global maxima are found in the origin (in momentum space), the algorithm looks for this value before integrating the chosen function, along with it, one can choose arbitrarily the number of points to sample and find the maxima. Also, some corrections were applied.
 - Merged jmsolano/denstoolkitdevbb/dtkintegrate into dtkintegrate
 - Merged in dtkintegrate (pull request #16)
 - All info related to the integral can be printed into a log file (except for the time consumed).
 - Merged jmsolano/denstoolkitdevbb/dtkintegrate into dtkintegrate
 - Merge branch 'dtkintegrate' of bitbucket.org:jmsolano/denstoolkitdevbb into dtkintegrate
 - Merged in dtkintegrate (pull request #15)
 - Corrections were made. User can choice between calculating global maxima or an average of maxima. dtkintegrate now calculates the integration region in momentum space and utilizes BondNetWork class to obtain information about the nuclei.
 - Corrections were made. Relative Shannon Entropy can be computed and user can know max value of rho, as well as the normalization constant of the integrand.
 - Added Normalized Shannon Entropy in momentum space; some corrections have been made
 - Merge branch 'develop' into dtkintegrate
 - Merged in dtkintegrate (pull request #14)
 - Added normalization constant for Shannon Entropy over normalized electron density and little other changes have been made.
 - Improved NCI plates colouring.
 - VegasIntegrator and VegasInputParameters classes are merged. Integrand is chosen via switch command. "helpers" are renamed to helpersIntegrate.
 - Final user can chose among different functions to integrate. Variance is printed on screen.
 - Merged in dtkintegrate (pull request #12)
 - Naming in "dtkintegrate" programme has changed to DTK standard naming.
 - "dtkintegrate" installed on DTK.

Version 1.5.0:
 - Added ChangeLog of dtkdrawer
 - Updated bump scripts
 - dtkdrawer: rotX, rotY, rotZ are working properly.
 - REfactor: dtkdrawer: checking bondnetwork loading in a single line.
 - bugfix dtkdrawer: stops if wf? is not present in PWD (reading cpx)
 - dtkdrawer: Working version (draws xyz, wfx, cpx)
 - dtkdrawer and dtknci orients view. dtkdrawer+cpx under construction
 - Added dtkdrawer. Working version.
 - Added NCI figures for dtk-manual
 - Updated dtk-manual: added dtkpropcpsoniso section.
 - Improved help menu and corrected signature values in dtkpropcpsoniso
 - Improvements to dtkpropcpsoniso.
 - Working version dtkpropcpsoniso isos and caps.
 - Refctr: symmetricsurfacegrid and isosurface are now derived of meshgrid
 - Improved dtkpropcpsoniso: smooth isosurface.
 - Improved dtkpropcpsoniso: transparent isosurface, display CPs' info.
 - Working version of dtkpropcpsoniso
 - dtkmanual updated. Includes dtknci section.
 - Bugfix: makefiles recognize darwin version gt 14
 - Improved options in dtknci
 - Added independent functions to add nuclei and bonds to pov files. Added dtknci source files.
 - Working version of dtknci. Includes using normals and colormaps.
 - Added gradient of reduced density gradient.
 - Corrected labels of fields in fldtypesdef.h (NCI fields)
 - Added libs to extract and draw isosurfaces.
 - Added libs for extracting and coloring isosurfaces.
 - Refactor: optflags FunctNames and class starts with uppercase letter
 - Refactor: updt critptnetwork names in dtkview
 - Refactor circledots3d FunctNames and class start with uppercase letter
 - Refactor: critptnetwork FunctNames and class start with lowercase letter
 - Refactor: bondnetwork FunctNames and Class start with uppercase letter
 - Refactor: atomcolschjmol FunctNames start with uppercase letter
 - Refactor: wfgrid3d FunctNames start with uppercase letter
 - Refactor: wfgrid2d FunctNames start with uppercase letter
 - Refactor: wfgrid1d FunctNames start with uppercase letter
 - Refactor: vmdtools FunctNames start with uppercase letter
 - Refactor: solcubetools FunctNames start with uppercase letter
 - Refactor: iofuncts-wf? FunctNames start with uppercase letter
 - Refactor: iofuncts-cpx: FunctNames start with first uppercase letter
 - Refactor: integrateoverbondpath: FunctNames start with uppercase letter
 - Refactor: fldtypesdef FunctNames start with Uppercase letter
 - Refactor: demat1critptnetworkXX FunctNames start with Uppercase
 - Refactor: atomradiicust: FunctNames start with Up.
 - Refactor: gausswavefunction: function names with first uppercase letter
 - Added help to makefiles.
 - Refactor: Removed cpp centines and fixed stdlib includes
 - Updated: sollibs (refactoring and removing centinels in cpps)
 - Added a few local files to gitignore
 - Refactor: dtkmomd, silent gnuplot rendering.
 - Refactor: 'maht.h' --> 'cmath'
 - Refactor: 'return 0' --> 'return EXIT_SUCCESS'
 - Added Char2ScalarFieldType. Refactor: dtkplane; removed spurious code.
 - Refactor: removed starred lines and false sentinels
 - Refactor: removed solreal. Using double
 - Refactor: removed blank lines between function implementations.
 - Refactor: CodeStyle ')newline{' to ') {'
 - Requesting g++-mp-6 for mac
 - Compilation OK after refactoring. MEP not tested.
 - Added local files to gitignore
 - Bugfix, dtkbpdens: nbgppts initialized (removes g++ warning).
 - Refactor, dtkbpdens: cleaning and moving code to helpersplot
 - Bugfix: removed spurious code (removing conttemp.dat file, dtkplane)
 - Refactor: dtkplane encasulated gnuplotting commands.
 - Working version of dtkview in MacOSX 10.13
 - Compilable dtkview in MacOSX 10.13
 - Updated license (removed unnecessary stars from license content)
 - Documentation of dtkgetnciplot improved.
 - Manual: added description of Fourier transf. for g primitives.
 - Added option to dtkgetnciplot: re-computation of cubes without asking.
 - Added option to dtkgetnciplot (centres cube around two atoms)
 - Added option to dtkcube: small cube centred around two atoms can be requested.
 - option added to dtkgetnciplot (quiet vmd mode is optional.)
 - Added solvmdtools (needed by the previous commit)
 - dtkcube now generates vmd scripts.
 - Updated dtkgetnciplot.
 - Added description of ellipticity to the dtkmanual.
 - Added the scalar field: ellipticity.
 - Fixed makefile (to install scripts)
 - Bugfix: Laplacian is computed fine when there are pseudopotentials.
 - Bugfix: in iofuncts-wfx: read of atomic numbers, not atomic charges. The atomic charges (atCharge) are read from "Atomic Numbers" in wfx files, as opposed to be read from "Nuclear Charges". This fix the problem of confusing atoms with pseudopotentials (when the atom is described with pseudos, the charge printed in the wfx is the screened charge, but not the total atomic charge).
 - Merge branch 'dev-corrac' into dev-ellip
 - test corr ang cases
 - Working version ellipticity implemented through custfld-wfnclass
 - Working parallel version of MEP (using prefMEP).
 - Working version: EvalVABCore works OK. Numerical tests: ch2brcl.
 - Makefiles refactor: compilation using openMP builds OK Debug version also tested, and works OK
 - Makefiles refactored. Automatic adding sources to build is working.
 - Ignoring ref directories for dtkcube
 - Corrected angular exponents. Added GaussWF::getPrTy.
 - Refactored helperplots (removed redundant code)
 - Randomising the names of contour files, and deleting them.
 - Added option to center plots in dtkdemat1
 - Rmvd helperplots code from dtkdemat1. Improved vis VectField
 - Splitted gnp into individual files/plots (dtkdemat1)
 - Added topological info (if computed) into the logfile.
 - Added the MD1(cicp) to dtkdemat1, both to cout and logfile
 - Added prepare release instructions to INFODEVELOP
 - Bugfix: parsing configure-nci for dtkcube works OK now.
 - Modified VanderWaals radius for S (fix bisulfides hydrongen bond issues)
 - Fixed false assignation (ROSE/REDG) in dtkline.
 - Improved povray (BCPs, dtkfindcp).
 - Added option to force several bcp connections.
 - Added s, LED, and RoSE description to dtk-manual.
 - reworded dtk-manual (describing dtkgetnciplot).
 - Merged in Frodox14/denstoolkitdevfork/impNCIs (pull request #11)
 - Merge branch 'develop' into dev-addseed
 - Added to dtk-manual a manual for dtkgetnciplot
 - Changed the name of VMD file in NCI script and omit the complete path
 - Notice for include in the manual a reduced gradient of density field
 - Added cubaneCPs.pdf (needed for generating dtk-manual)
 - Added option to search CPs at a point (betwee two acps) to dtkfindcp
 - Added TODO in dtkview
 - Added bcp force connectivity option to dtkfindcp.
 - Merge branch 'develop' into ref
 - Merged in Frodox14/denstoolkitdevfork/develop (pull request #10)
 - Refactored dtkgetnciplot: Uniform style naming and code conventions.
 - Fix bug of values for vmd
 - Merged in Frodox14/denstoolkitdevfork/impNCIs (pull request #9)
 - Refactor script for NCI
 - Fix bug in NCI special parameters
 - Modified script of NCI, now you can select the region that will be visualized
 - Improved configure-nci help menu (dtkcube)
 - NCI parameters can be parsed to dtkcube, which passes them to the gausswavefunction object.
 - Moved defines to begining of file (NCI), and refactor.
 - refactor dtkgetnciplot (syntax, style, gen pdf).
 - Added a subrutine for create NCI plot
 - Added rutine for make a file to graph Density vs Reduced Density Gradient from cube files
 - Merge branch 'develop' into impNCIs
 - Improved error messages.
 - Small improvements on dtkgetnciplot (refactor)
 - Bugfix: cubes computed if not present.
 - Refactored dtkgetnciplot
 - Merged in Frodox14/denstoolkitdevfork/develop (pull request #7)
 - Added macros for minimum and maximum values of rho in the field NCI
 - Added script for make visualization of NCI in VMD
 - Merge remote-tracking branch 'upstream/develop' into develop
 - Added a new factor to field NCI for make compatible the cube output with instructions of NCIPlot and vmd.
 - Correction of NCI field for change of sign of rho values
 - Improved description of NCI fields.
 - Refactor: adjusting to previousl coding style.
 - Merged in Frodox14/denstoolkitdevfork/develop (pull request #5)
 - Made grammatial and style corrections for pull request
 - Refactored, NCI functions, with previous style
 - Added correction to the NCI field
 - Added NCI field to dtkcube
 - Fixed problems with declaration values of the function "evalNCIs"
 - Fixed declaration problem
 - Added tag/keys for NCI field
 - Added functions "evalNCIs" and "evalNCILambda" for calculating NCI field, the first returning values of Reduced Density Gradient and the second returning values of Rho
 - Added Luis Alfredo to CONTRIBUTORS list.
 - Rewording and spelling check on availablefields.tex.
 - Merge branch 'develop' into developAlfredo
 - Merge remote-tracking branch 'upstream/develop' into developAlfredo
 - Merge branch 'developAlfredo' of https://bitbucket.org/Frodox14/denstoolkitdevbb into developAlfredo
 - Added instructions for implement new scalar fields
 - Added instructions for implement new scalar fields
 - Add documentation of new field "Virial Potential Energy Densisty" in dtk-manual
 - dtkintegobondpath now computes proportional energies.
 - Merge branch 'developAlfredo' into develop
 - Refactor pull Luis Alfredo's pull request.
 - Fix orthographic errors for Virial Potential Energy Density
 - Refactoring program dtkplane, scalar field Virial Potential Energy
 - Refactoring program dtkplane
 - Refactoring program dtkline
 - Add all tags/keys of the new scalar field (Virial Potential Energy Density) in the fldtypesdef.h file
 - Add new scalar field Virial Potential Energy Density(V.P.E.D.), only how evaluate at some point and add in the method displayAllFieldProperties and white AllFieldProperties
 - Fix how make the files names on dtkpoint
 - Add the scalar field "Potencial Energy Density" to the program dtkcube
 - Add the scalar field "Potencial Energy Density" to the program dtkplane
 - Add the scalar field "Potencial Energy Density" to the program dtkline
 - Add all tags of the new scalar field (Potencial Energy Density) in the fldtypesdef.h file
 - Add new scalar field Potencial Energy Density, only add how evaluate at some point and display and write in the method AllProperties
 - Added dtkGetSumBCPRho to evaluate the sum of rho at all bcps.
 - Fixed Makefile (added dtkintegobondpath post-installation test)
 - Slight improve on GetIntermediateCoordinatesAndDistanceBetweenPoints.
 - Setup general Makefile
 - first release of dtkintegobondpath program.
 - Setup skeleton for integrateoverbondpath class and dtkintegobondpath.
 - Fixed Makefile (correct copy of wfn file into test directory)
 - Fixed Makefile (runtest includes a test for dtkcharcicp)
 - Fixed Makefile (really include dtkcharcicp)
 - Added dtkcharcicp to global Makefile
 - First working version of dtkcharcicp.
 - Merge branch 'develop' into dev-charcicp
 - Added findTwoClosestAtomsToBCP function to critPtNetwork class.
 - Signatures and eigenvalues of hessian (2d and 6d) are saved now.
 - Added description (dtkcharcicp) in ChangeLog
 - Added files for tracking
 - Fixed HessDensityMatrix1 (dxpdy!=dxdyp)
 - Implemented eig6. Not tested!
 - Merge branch 'develop'
 - Untracked dtkfindcicp files.
 - First finished implementation of demat1critptnetworkbp class
 - critptnetwork now produces BGPs oriented to the order of conBCP
 - critptnetwork now accepts increasing the size of the BGP arrays.
 - Configured critptnetwork to accept changes in step for BGPs.
 - Modified critptnetwork class to split processes related to ACPs, BCPs, and BGPs searches.
 - Implmented basic skeleton for class DeAat1CritPtNetworkBP (inc Makefile)
 - Renamed demat1critptnetwork to demat1critptnetworksl
 - Added instructions for compiling DensToolKitViewer under Fedora 21.
 - Partial commit.
 - Merge branch 'master' into impfindcicp
 - Updated checkdependencies (check all before exiting)
 - Merge branch 'master' into impfindcicp
 - Changed install instructions ("--bare" removed)
 - Added log and other output files.
 - Clone of dtkfindcp to dtkfindcicp
 - Merge branch 'develop'
 - Changed g++-mp-4.8 to g++-mp-4.9 (for OSX)
 - Merge branch 'develop'
 - Added soltimer
 - Merge branch 'develop'
 - private to protected in gausswavefunction.h
 - Merge branch 'develop'
 - using fast-math
 - Merge branch 'develop'
 - Refactor: wavefunctionclass --> gausswavefunction
 - Merge branch 'develop'
 - Removed unused variables, and resolved compiler warnings.
 - Merge branch 'develop'
 - Fixed dtkbpdens/Makefile (added -std=c++11)
 - Merge branch 'develop'
 - Optimized momentum density (after c++11)
 - After adding c++11 into makefiles.
 - Compiler set to use std=c++11
 - After optimization of evalDensity, evalRhoGradRho, evalHessian(x,r,g,h) Merge branch 'develop'
 - Optimized rho, rhogradrho, rhogradrhohessrho
 - Merge branch 'develop'
 - Improved Doxygen documentation. Requires Graphviz dot
 - Improved Doxygen documentation. Requires Graphviz dot
 - Added credits to VizMol.
 - Added invitation to contribute.
 - Added download address for DensToolKitViewer.app
 - Added contributors list to README.md
 - Added contributor list.
 - Compilation error fix: removed a spurious solreal declaration.
 - Added 2nd, 3rd, and 4th derivatives for primitives of type pt<57.
 - Extended support for PrimType<57 (First derivatives)
 - Extended support for evalDensity and evalDensityMatrix1 to PrimType<=56
 - Added information about DTKViewer in main Readme.md
 - Up-dated toolbar buttons.
 - Added View CP Labels checkbox, and menu action.
 - Added Transparency checkbox and menu action.
 - Added 'view atoms', and 'view regular bonds' options to dtkview.
 - Added dtkmanual info in README.md
 - Improved dtkview instructions
 - Improved git-cloning instructions.

Version 1.2.0:
 - Added version in dtkviewer->dtkaboutdialog
 - Merge branch 'master' of https://bitbucket.org/jmsolano/denstoolkitdevbb
 - Added boilerplates, improved install instructions.
 - Added boilerplates
 - Preparing release of DTKViewer (adding images, etc.)
 - Added toobar-buttons, checkboxes, and actions in view menu for optionally viewing BGPs, RGPs, and CGPs.
 - Small mod to about dialog. (no parent)
 - Improved about dialog (included paper's doi).
 - Corrected main window icon size.
 - Added about dialog.
 - Fixed linux compilation
 - Added action and toolbar button for view atom labels.
 - Added icons to toolbar.
 - Using non-native menus in linux (ubuntu problem).
 - Corrected destructor of dtkmainwindow class. (delete actions and menus)
 - This version is able to draw atom labels.
 - Fixed linux/darwing grabframebuffer names.
 - Implemented export image for saving the opengl viewport.
 - Implemented open file dialog (cpx) and clear viewport.
 - Merge branch 'master' into incgui
 - Merge branch 'develop': After adding option for not drawing Hydrogens in dtkqdmol.
 - Added option for not drawing Hydrogens in dtkqdmol.
 - Updated doi for DTK paper.
 - Updated README.md: improved git instructions, added developer git info.
 - Corrected git address for read-only access.
 - Changed git address.
 - Finished display of Ring and Cage Paths. Merge needed (see below)
 - Moved definition of MAXBCPCONNECTEDTORCP and MAXRCPCONNECTEDTOCCP to *.h
 - Partial commit (displaying ring and cage paths)
 - Merge branch 'incgui' of https://bitbucket.org/jmsolano/denstoolkitdevbb into incgui
 - Merge branch 'develop' into incgui
 - Added rign and cage paths reading into readFromFile (cpx)
 - Added README for installation of DTKViewer on Ubuntu
 - Mac/linux compilation fixed.
 - Implemented visualization of Critical Points and Grandient Paths.
 - Linux/mac compatibility
 - Added shining and specular effects. Corrected zoom.
 - Drawing bonds done.
 - Drawing atoms done
 - Integrated bondnetwork
 - Third iteration linux/mac
 - More fixings for linux/mac
 - Linux/mac compilation working
 - Base openglviewer implementation.
 - Included dtkfindcp option -r description in manual

Version 1.1.2:
 - BugFix (totPri=nPri in wfn loading file function)
 - Included pseudopotential formulae in dtkmanual.

Version 1.1.1:
 - First implementation of EDF (Gauss-type pseudopotentials) contributions.
 - added more space for cage paths
 - Updated solmath

Version 1.0.1:
 - Ring and Cage paths included in dtkfindcp
 - Merge branch 'develop'
 - Added visualization of Cage Paths. setCagePaths seems to be working.
 - First apparently working version of setCagePaths (needs visualization)
 - Working version, ring path search almost complete.
 - Improving findSingleRhoRingGrad...
 - Improving findSingleRhoRingGrad...
 - Merge branch 'develop' into dev-rcpcon
 - Updated solmath.*
 - Merge branch 'develop' into dev-rcpcon
 - Updated solmath.*
 - Advances on walkGrad...
 - Implemented walkGradientPathRK5ToEndPoint.
 - Merge branch 'develop' into dev-rcpcon
 - Removing spaces in AtLbls (wfx-reader)
 - Merge branch 'develop' into dev-rcpcon
 - Removing spaces in AtLbls (wfx-reader)
 - First implementation of RingPath search.
 - Merge branch 'develop' into dev-rcpcon
 - Amend progressBar bugfix
 - Merge branch 'develop' into dev-rcpcon
 - Amend progressBar bugfix
 - Renamed findSingleRhoGradientPath... in dtkbpdens and dtkdemat1
 - Merge branch 'develop' into dev-rcpcon
 - Corrected progress bar display
 - Merge branch 'develop' into dev-rcpcon
 - Updated solmemhand.* (Added alloc4DRealArray)
 - Inserted setRingGradientPaths() into critPtNetWork class.
 - First stage of correct rcp connectivity implemented.
 - Changed atBCP for conBCP, and added conRCP and RRGP arrays.
 - Added CircleDots3D class.
 - Improved documentation, mainpage, added logo.
 - Added maxBondDist and maxBCPACPDist. Improved crtPtNtwrk documentation.
 - Spelling corrections on README.md
 - Added info about checkdependencies and make runtests ro README.md

Version 1.0.0:
 - Removing some superfluous messages in bump_version.sh and dtkchgcurrversion
 - Fixbug: <string> ---> <cstring> in common/solmemhand.h
 - Automatic update of CURRENTVERSIONS
 - added dtkchgcurrversion.
 - Fixbug: bump_version.sh (and remove redundant GPLs)
 - optflags* fix bug while using sed
 - Merge branch 'master' of https://bitbucket.org/jmsolano/denstoolkitdevbb
 - Fixed bad character. (Caused a bug with sed)
 - Fixed bad character. (Caused a bug with sed)
 - Added GPLv3 license to missing cpp files
 - Fixed preprelease
 - bump_version.sh and preprelease finished (betas)

